//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChoCastle.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;

    public partial class db_imgEntities : DbContext
    {
        public db_imgEntities()
            : base("name=db_imgEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ProductImage> ProductImages { get; set; }
    
        public virtual int sp_delete_file(Nullable<int> file_id)
        {
            var file_idParameter = file_id.HasValue ?
                new ObjectParameter("file_id", file_id) :
                new ObjectParameter("file_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_file", file_idParameter);
        }
    
        public virtual ObjectResult<sp_get_all_files_Result> sp_get_all_files()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_all_files_Result>("sp_get_all_files");
        }
    
        public virtual ObjectResult<sp_get_file_details_Result> sp_get_file_details(Nullable<int> file_id)
        {
            var file_idParameter = file_id.HasValue ?
                new ObjectParameter("file_id", file_id) :
                new ObjectParameter("file_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_file_details_Result>("sp_get_file_details", file_idParameter);
        }
    
        public virtual ObjectResult<sp_get_file_details_Result> sp_get_product_mainPhoto(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_file_details_Result>("sp_get_product_mainPhoto", productIDParameter);
        }
    
        public virtual ObjectResult<sp_get_file_details_Result> sp_get_product_photos(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_file_details_Result>("sp_get_product_photos", productIDParameter);
        }
    
        public virtual int sp_insert_file(string file_name, string file_ext, string file_base64, Nullable<int> productID, Nullable<int> isMain, Nullable<int> sortID)
        {
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var file_extParameter = file_ext != null ?
                new ObjectParameter("file_ext", file_ext) :
                new ObjectParameter("file_ext", typeof(string));
    
            var file_base64Parameter = file_base64 != null ?
                new ObjectParameter("file_base64", file_base64) :
                new ObjectParameter("file_base64", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var isMainParameter = isMain.HasValue ?
                new ObjectParameter("isMain", isMain) :
                new ObjectParameter("isMain", typeof(int));
    
            var sortIDParameter = sortID.HasValue ?
                new ObjectParameter("SortID", sortID) :
                new ObjectParameter("SortID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_file", file_nameParameter, file_extParameter, file_base64Parameter, productIDParameter, isMainParameter, sortIDParameter);
        }
    }
}
