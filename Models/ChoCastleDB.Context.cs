//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChoCastle.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ChoCastleDBEntities : DbContext
    {
        public ChoCastleDBEntities()
            : base("name=ChoCastleDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Carriage> Carriages { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<ProductCategory> ProductCategories { get; set; }
        public virtual DbSet<ProductImage> ProductImages { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ShoppingCar> ShoppingCars { get; set; }
        public virtual DbSet<ShoppingDetail> ShoppingDetails { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
    
        public virtual int sp_delete_file(Nullable<int> file_id)
        {
            var file_idParameter = file_id.HasValue ?
                new ObjectParameter("file_id", file_id) :
                new ObjectParameter("file_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_delete_file", file_idParameter);
        }
    
        public virtual ObjectResult<sp_get_all_files_Result> sp_get_all_files()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_all_files_Result>("sp_get_all_files");
        }
    
        public virtual ObjectResult<sp_get_file_details_Result> sp_get_file_details(Nullable<int> file_id)
        {
            var file_idParameter = file_id.HasValue ?
                new ObjectParameter("file_id", file_id) :
                new ObjectParameter("file_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_file_details_Result>("sp_get_file_details", file_idParameter);
        }
    
        public virtual ObjectResult<sp_get_product_mainPhoto_Result> sp_get_product_mainPhoto(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_product_mainPhoto_Result>("sp_get_product_mainPhoto", productIDParameter);
        }
    
        public virtual ObjectResult<sp_get_product_photos_Result> sp_get_product_photos(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_get_product_photos_Result>("sp_get_product_photos", productIDParameter);
        }
    
        public virtual int sp_insert_file(string file_name, string file_ext, string file_base64, Nullable<int> productID, Nullable<int> isMain, Nullable<int> sortID)
        {
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var file_extParameter = file_ext != null ?
                new ObjectParameter("file_ext", file_ext) :
                new ObjectParameter("file_ext", typeof(string));
    
            var file_base64Parameter = file_base64 != null ?
                new ObjectParameter("file_base64", file_base64) :
                new ObjectParameter("file_base64", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var isMainParameter = isMain.HasValue ?
                new ObjectParameter("isMain", isMain) :
                new ObjectParameter("isMain", typeof(int));
    
            var sortIDParameter = sortID.HasValue ?
                new ObjectParameter("SortID", sortID) :
                new ObjectParameter("SortID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert_file", file_nameParameter, file_extParameter, file_base64Parameter, productIDParameter, isMainParameter, sortIDParameter);
        }
    
        public virtual int SP_Order_AddOrder(Nullable<int> cartID)
        {
            var cartIDParameter = cartID.HasValue ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Order_AddOrder", cartIDParameter);
        }
    
        public virtual int sp_set_main_file(Nullable<int> file_id)
        {
            var file_idParameter = file_id.HasValue ?
                new ObjectParameter("file_id", file_id) :
                new ObjectParameter("file_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_set_main_file", file_idParameter);
        }
    
        public virtual int SP_ShoppingCart_GetCartIdByMemberID(Nullable<int> memberID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ShoppingCart_GetCartIdByMemberID", memberIDParameter);
        }
    
        public virtual int SP_ShoppingCart_RemovePreviousCartByMember(Nullable<int> memberID, Nullable<int> cartID)
        {
            var memberIDParameter = memberID.HasValue ?
                new ObjectParameter("MemberID", memberID) :
                new ObjectParameter("MemberID", typeof(int));
    
            var cartIDParameter = cartID.HasValue ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ShoppingCart_RemovePreviousCartByMember", memberIDParameter, cartIDParameter);
        }
    
        public virtual ObjectResult<SP_ShoppingDetail_GetShoppingDetailByCartID_Result> SP_ShoppingDetail_GetShoppingDetailByCartID(Nullable<int> cartID)
        {
            var cartIDParameter = cartID.HasValue ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ShoppingDetail_GetShoppingDetailByCartID_Result>("SP_ShoppingDetail_GetShoppingDetailByCartID", cartIDParameter);
        }
    
        public virtual ObjectResult<SP_ShoppingDetail_GetShoppingDetailByCartProduct_Result> SP_ShoppingDetail_GetShoppingDetailByCartProduct(Nullable<int> cartID, Nullable<int> productID)
        {
            var cartIDParameter = cartID.HasValue ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ShoppingDetail_GetShoppingDetailByCartProduct_Result>("SP_ShoppingDetail_GetShoppingDetailByCartProduct", cartIDParameter, productIDParameter);
        }
    
        public virtual int SP_ShoppingDetail_RemoveItem(Nullable<int> cartID, Nullable<int> productID)
        {
            var cartIDParameter = cartID.HasValue ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ShoppingDetail_RemoveItem", cartIDParameter, productIDParameter);
        }
    
        public virtual int SP_ShoppingDetail_UpdateItem(Nullable<int> carID, Nullable<int> productID, string productName, Nullable<int> unitPrice, Nullable<int> orderQuantity, Nullable<int> subtotal, Nullable<System.DateTime> addedDate)
        {
            var carIDParameter = carID.HasValue ?
                new ObjectParameter("CarID", carID) :
                new ObjectParameter("CarID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("UnitPrice", unitPrice) :
                new ObjectParameter("UnitPrice", typeof(int));
    
            var orderQuantityParameter = orderQuantity.HasValue ?
                new ObjectParameter("OrderQuantity", orderQuantity) :
                new ObjectParameter("OrderQuantity", typeof(int));
    
            var subtotalParameter = subtotal.HasValue ?
                new ObjectParameter("Subtotal", subtotal) :
                new ObjectParameter("Subtotal", typeof(int));
    
            var addedDateParameter = addedDate.HasValue ?
                new ObjectParameter("AddedDate", addedDate) :
                new ObjectParameter("AddedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ShoppingDetail_UpdateItem", carIDParameter, productIDParameter, productNameParameter, unitPriceParameter, orderQuantityParameter, subtotalParameter, addedDateParameter);
        }
    }
}
